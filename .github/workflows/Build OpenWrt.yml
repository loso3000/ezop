#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
#   watch:
#     types: started
    
  #schedule:
     #- cron: 00 22 * * *
    
  
env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: diffconfig
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Check server performance
      run: |
         echo "警告⚠"
         echo "若分配的服务器性能不足，务必及时取消，重新运行！"
         echo "已知编译成功CPU型号：8370C,8171M"
         echo "已知性能不足CPU型号：8272CL E5-2673"
         echo -e "-------------- ------------CPU信息------------------------------------------\n"
         echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
         echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
         echo "-------------------------------内存信息-------------------------------------------"
         echo "已安装内存详细信息："
         sudo lshw -short -C memory | grep GiB
         echo -e "\n"
         echo "-----------------------------硬盘信息---------------------------------------------"
         echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
         echo "硬盘详情："
         df -Th
         
         if grep  "8370" "/proc/cpuinfo" ; then
          echo "CPU YES！！！"
          echo "CKCPU=success" >> $GITHUB_ENV
         else
             echo "CPU NO！！！"
             echo "CKCPU=failure" >> $GITHUB_ENV
             #exit 1
         fi
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |

          docker rmi $(docker images -q)
          sudo -E rm -rf $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "1{s/\r$//;p;q}")
          sudo -E apt -yqq update
          sudo -E apt -yqq purge $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "2{s/\r$//;p;q}")
          sudo -E apt -yqq full-upgrade
          sudo -E apt -yqq install $(cat $GITHUB_WORKSPACE/Depends.txt | sed -n "3{s/\r$//;p;q}")
          sudo -E apt -yqq autoremove --purge
          sudo -E apt -yqq autoclean
          sudo -E apt -yqq clean
          sudo -E systemctl daemon-reload
          sudo timedatectl set-timezone "Asia/Shanghai"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
          echo "FIRMWARE=$PWD" >> $GITHUB_ENV
          echo "DATA=`date +%Y%m%d_%H -d +"12"hour`" >> $GITHUB_ENV
          echo "${{ env.FIRMWARE }} =----= ${{ env.DATA }}"
   
    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
       ccache: 'true'
       clean:  'false'  # 'false'
       prefix: ${{ github.workspace }}/openwrt
    
    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: luci-theme-argonn
      run: |
        cd openwrt/package 		
        # git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git luci-theme-argonn
        git clone -b js https://github.com/gngpp/luci-theme-design.git luci-theme-design
        svn export https://github.com/loso3000/mypk/trunk/up/luci-app-jsplus luci-app-advancedplus
        svn export https://github.com/loso3000/mypk/trunk/up/luci-theme-catjs luci-theme-kucat
        svn export https://github.com/loso3000/mypk/trunk/up/luci-app-gk-jzgk luci-app-parentcontrol
        svn export https://github.com/loso3000/mypk/trunk/up/luci-app-jswizard luci-app-netwizard
        svn export https://github.com/loso3000/mypk/trunk/up/luci-app-jspoweroffdevice luci-app-poweroffdevice
        svn export https://github.com/loso3000/mypk/trunk/up/luci-app-jseqos luci-app-eqosplus
        svn export https://github.com/loso3000/mypk/trunk/up/luci-app-jstimeset luci-app-autotimeset
        #svn export https://github.com/loso3000/mypk/trunk/up/netspeedtest netspeedtest
        rm -rf ./emortal/autocore  && rm -rf ./emortal/default-settings
        svn export https://github.com/loso3000/mypk/trunk/up/emortal emortal2
    - name: luci-app-romupdate
      run: |
        cd openwrt/package
        svn export https://github.com/loso3000/other/trunk/up/pass/luci-app-bypass luci-app-bypass
        rm ./luci-app-bypass/po/zh_Hans && mv ./luci-app-bypass/po/zh-cn ./luci-app-bypass/po/zh_Hans
        # git clone -b immor https://github.com/Blueplanet20120/luci-app-romupdate.git
   
    
    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        # $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        echo -e 'CONFIG_DEVEL=y\nCONFIG_CCACHE=y' >> .config #Cache.Speedup
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Packages
      id: compile
      run: |
         df -h
         cd openwrt
         echo -e "$(nproc) thread compile"
         make tools/compile -j$(nproc) || make tools/compile -j72
         make toolchain/compile -j$(nproc) || make toolchain/compile -j72
         make target/compile -j$(nproc) || make target/compile -j72 IGNORE_ERRORS=1
         make diffconfig
         make package/compile -j$(nproc) IGNORE_ERRORS=1 || make package/compile -j72 IGNORE_ERRORS=1
         make package/index
    - name: Generate Firmware
      run: |
         df -h
         
         # mkdir -p files/etc/uci-defaults/
         # cp ./openwrt/init-settings.sh openwrt/files/etc/uci-defaults/99-init-settings
         mkdir -p openwrt/files/etc/kmodlib
         mkdir -p kmodlib
         cp -rf $(find ./openwrt/bin/ -type f -name "kmod*.ipk") ./kmodlib
         ls ./kmodlib
         tar -czvf openwrt/files/etc/kmodipk/kmodlib.tar.gz ./kmodlib  && rm -rf kmodlib
         ls openwrt/files/etc/
         cd openwrt 
         make package/install -j$(nproc) || make package/install -j1 V=s
         make target/install -j$(nproc) || make target/install -j1 V=s
         make checksum
         pushd bin/targets/x86/64
         ls -a
         rm -rf *-x86-64-generic-kernel.bin
         rm -rf *t-x86-64-generic-rootfs.tar.gz
         rm -rf *-x86-64-generic-squashfs-rootfs.img.gz
         rm -rf *-x86-64-generic-squashfs-combined-efi.vmdk
         rm -rf *-x86-64-generic.manifest
         ls -a
         popd

    - name: Prepare Artifact
      run: |
          mkdir -p ./jz/firmware
          find ./openwrt/bin/targets/ -name "*squashfs-combined*"| xargs -i mv -f {} ./jz/firmware
          cd ./jz/firmware
          ls -a
          gzip *.img || true
          ls -a
          echo -e "Sirpdboy-Ipv6-Super-Vip-2102-${{ env.DATA }}-极致通用版--【efi通用不区分引导方式】\n" > 版本日期和MD5信息.txt
          echo -e "【固件插件说明与各版本下载链接】：https://github.com/sirpdboy/openwrt/ \n" >> 版本日期和MD5信息.txt
          echo -e "MD5: \n" >> 版本日期和MD5信息.txt
          md5sum *img* >> 版本日期和MD5信息.txt
    - name: Upload Firmware
      uses: actions/upload-artifact@main
      with:
          name: ${{ env.DATA }}-SirpdboyOpenWrt-Ipv6-Vip-Super-2102-Firmware
          path: ./jz/firmware

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_bin-2102
        path: openwrt/bin
        
    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
          retain_days: 1
          keep_minimum_runs: 1

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
          keep_latest: 1
          delete_tags: true
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
         name: |
            bin-archive
